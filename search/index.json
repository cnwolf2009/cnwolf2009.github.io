[{"content":"一.进制 1、 为什么要学习进制？ 在我们生活中，一般不提进制的概念，默认用的就是10进制，计算机是不认识10进制的，计算机采用的是二进制，所以学习进制能帮助我们更好的去理解计算机是如何存储数据的。\n2、 进制的定义 十进制的定义：由0到9 共10个符号组成，逢十进一\n八进制的定义：由0到7八个符号组成 逢八进一\n十六进制的定义：十六个符号组成， 分别是0 1 2 3 4 5 6 7 8 9 A B C D E F, 逢\n十六进一\nN进制的定义：由N个符号组成 逢N进一。\n3、 计算机是如何存储数据的 计算机中，比如一部电影，一首歌，一张照片，最终都是以二进制的形式存储的。\n计算机为什么采用二进制？\n计算机是由许多电路组成的，电路只有两种状态，通电不通电。\n所以大家一定对二进制非常熟悉。\n二进制与16进制的对应关系（很重要，一定要记住！！！）\n0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 0 1 2 3 4 5 6 7 8 9 A B C D E F 二.数据宽度 1.数据类型 数据宽度的定义：\n数学上的数字是没有大小限制的，可以无穷大，也可以无穷小。计算机跟数学里的数字还是有差异的，因为硬件的限制所以计算机里存储的数据是没办法做到无限大的，大小是受限制的。\n数据宽度的意义：\n内存中存储了如下数据：\n001110101001010010111001011101110001010000111010\n可以把数据的宽度理解位容器的大小，它有多少位就代表能存储多少位的二进制数。\n有符号数和无符号数：\n概念：无符号数全表示正数，有符号数表示有正数有负数。\n提示：以后我们在表示内存的数据时都会采用16进制，以后大家看到最高位大于等于8的数就能想到他是负数。（前提是有符号数，无符号写的多少就是多少。）\n2.数据溢出: 所有的容器都是有一定的存储范围的，一旦超出存储范围，它就会从低位到高位存储，多余的舍弃\n例如：用32位宽度的容器计算 FFFF FFFF+1=? 1 0000 0000最高位超出界限舍弃结果为0\n3.进制的符号 十六进制符号用0x表示 例如0xFF 二进制用B表示 例如 10B\n4.数据类型（容器种类） 字节 byte：数据宽度8位\n字 WORD 数据宽度为16位\n双字 DWORD 数据宽度为32位\n四字 QWORD 数据宽度位64位。\n","date":"2025-04-16T16:13:47+08:00","permalink":"https://cnwolf2009.github.io/p/c%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80-%E8%BF%9B%E5%88%B6%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%AE%BD%E5%BA%A6/","title":"C语言基础 进制与数据宽度"}]